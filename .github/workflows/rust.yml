name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
        # ===================================================================
        # 1. 主流桌面平台 (Intel/AMD 64-bit)
        # ===================================================================
        - name: Windows x64 (MSVC)
          os: windows-latest
          target: x86_64-pc-windows-msvc
          binary_name: dash.exe
          asset_name: dash-x86_64-windows-msvc.exe
        - name: macOS x64 (Intel)
          os: macos-latest
          target: x86_64-apple-darwin
          binary_name: dash
          asset_name: dash-x86_64-apple-darwin
        - name: Linux x64 (GNU)
          os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
          binary_name: dash
          asset_name: dash-x86_64-linux-gnu
        - name: Linux x64 (musl)
          os: ubuntu-latest
          target: x86_64-unknown-linux-musl
          binary_name: dash
          asset_name: dash-x86_64-linux-musl # 适合静态链接和容器环境
        # ===================================================================
        # 2. 主流ARM平台 (ARM64 / AArch64)
        # ===================================================================
        - name: Windows ARM64 (MSVC)
          os: windows-latest
          target: aarch64-pc-windows-msvc
          binary_name: dash.exe
          asset_name: dash-aarch64-windows-msvc.exe # 适用于Windows on ARM设备
        - name: macOS ARM64 (Apple Silicon)
          os: macos-14 # 明确指定支持ARM64的runner
          target: aarch64-apple-darwin
          binary_name: dash
          asset_name: dash-aarch64-apple-darwin # 适用于 M1/M2/M3 等芯片
        - name: Linux ARM64 (GNU)
          os: ubuntu-latest
          target: aarch64-unknown-linux-gnu
          binary_name: dash
          asset_name: dash-aarch64-linux-gnu # 适用于AWS Graviton, 树莓派4/5等
        - name: Linux ARM64 (musl)
          os: ubuntu-latest
          target: aarch64-unknown-linux-musl
          binary_name: dash
          asset_name: dash-aarch64-linux-musl # ARM64静态链接版本
        # ===================================================================
        # 3. 32位架构 (Legacy & Embedded)
        # ===================================================================
        - name: Windows x86 (MSVC)
          os: windows-latest
          target: i686-pc-windows-msvc
          binary_name: dash.exe
          asset_name: dash-i686-windows-msvc.exe
        - name: Linux x86 (GNU)
          os: ubuntu-latest
          target: i686-unknown-linux-gnu
          binary_name: dash
          asset_name: dash-i686-linux-gnu
        - name: Linux ARMv7 (GNU)
          os: ubuntu-latest
          target: armv7-unknown-linux-gnueabihf
          binary_name: dash
          asset_name: dash-armv7-linux-gnueabihf # 适用于树莓派2/3等老款ARM设备
        # ===================================================================
        # 4. Windows GNU 工具链 (MinGW)
        # ===================================================================
        - name: Windows x64 (GNU)
          os: windows-latest
          target: x86_64-pc-windows-gnu
          binary_name: dash.exe
          asset_name: dash-x86_64-windows-gnu.exe
        - name: Windows x86 (GNU)
          os: windows-latest
          target: i686-pc-windows-gnu
          binary_name: dash.exe
          asset_name: dash-i686-windows-gnu.exe

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          override: true
      
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.platform.target }}
      
      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar -czf ${{ matrix.platform.asset_name }}.tar.gz ${{ matrix.platform.binary_name }}
          echo "ASSET_PATH=target/${{ matrix.platform.target }}/release/${{ matrix.platform.asset_name }}.tar.gz" >> $GITHUB_ENV
      
      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ASSET_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
