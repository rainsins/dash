name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - name: Windows x64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: your_program.exe
            asset_name: your_program-windows-x64

          - name: macOS x64
            os: macos-latest
            target: x86_64-apple-darwin
            binary_name: your_program
            asset_name: your_program-macos-x64

          - name: Linux x64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: your_program
            asset_name: your_program-linux-x64

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          override: true
      
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.platform.target }}
      
      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar -czf ${{ matrix.platform.asset_name }}.tar.gz ${{ matrix.platform.binary_name }}
          echo "ASSET_PATH=target/${{ matrix.platform.target }}/release/${{ matrix.platform.asset_name }}.tar.gz" >> $GITHUB_ENV
      
      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_crates:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Publish
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --token ${{ secrets.CRATES_IO_TOKEN }}
